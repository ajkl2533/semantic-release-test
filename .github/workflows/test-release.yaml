name: Release

# Run the workflow when a Pull Request is opened or when changes are pushed to master
on:
  push:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow Semantic Release and deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  release:
    # Only release on push to master
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Get version
        id: get_version
        run: |
          echo  "version=$(git describe --tags)" >> $GITHUB_OUTPUT

      - name: Build Storybook
        run: yarn build-storybook -o ./docs-build/${{ steps.get_version.outputs.version }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs-build


  deploy:
    needs: docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

